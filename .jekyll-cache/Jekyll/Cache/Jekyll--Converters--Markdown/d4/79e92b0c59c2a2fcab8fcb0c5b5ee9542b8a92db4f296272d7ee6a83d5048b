I"ü1<h1 id="r">R</h1>

<p>R is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment, developed at Bell Laboratories.</p>

<p>R provides a wide variety of statistical such as linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, clustering and graphical techniques, etc‚Ä¶ and is highly extensible.</p>

<p><br /></p>
<hr />

<p><br /></p>

<h1 id="cleaning-with-r">Cleaning with R</h1>
<p><br /></p>

<h1 id="background-for-this-activity">Background for this activity</h1>
<p>In this activity, I will review a scenario and focus on cleaning real data with R.</p>

<h1 id="the-scenario">The scenario</h1>

<p>Working as a data analyst working for a hotel booking company, the main task is to clean a .csv file that was created after querying a database to combine two different tables from different hotels.</p>

<p>In order to learn more about this data, I am going to use functions to preview the data‚Äôs structure, including its columns and rows. In addition, I am going to use basic cleaning functions to prepare this data for future analysis.</p>

<p><strong>Step 0: Download the data</strong></p>

<ul>
  <li><a href="hotel_bookings.csv">https://d3c33hcgiwev3.cloudfront.net/GL0bk8O2Sja9G5PDtko2uQ_31e445d7ca64417eb45aeaa08ec90bf1<em>hotel_bookings.csv?Expires=1626825600&amp;Signature=YNiNqD-rNztVCk9AoiWmtptNqvbeUOX4-kddhNLLm2xOEXlGLKN0DUVNatROh0gm2nEoQsjYEnNYLh6~vu4n2D2ZoQXaahLlPSW0F~08-9GXn5lAe15Tm5eOnk46tCBBblmiIu~aR5KL9pwnnb0yZwIiE5hnwGHQpWJbSGFhSyE</em>&amp;Key-Pair-Id=APKAJLTNE6QMUY6HBC5A</a></li>
</ul>

<p><em>**</em>Step 1: Load packages</p>

<p>In order to start cleaning the data, I first install and load the required packages, that is <code class="language-plaintext highlighter-rouge">tidyverse</code>, <code class="language-plaintext highlighter-rouge">skimr</code>, and <code class="language-plaintext highlighter-rouge">janitor</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"tidyverse"</span><span class="p">)</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"skimr"</span><span class="p">)</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"janitor"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Once a package is installed, it has to be loaded by running the <code class="language-plaintext highlighter-rouge">library()</code> function, with the package name inside the parentheses:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">skimr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">janitor</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="step-2-import-data">Step 2: Import data</h2>

<p>The data is currently an external .csv file. In order to view and clean it in <code class="language-plaintext highlighter-rouge">R</code>, I need to import it. The <code class="language-plaintext highlighter-rouge">tidyverse</code> library <code class="language-plaintext highlighter-rouge">readr</code> package has a number of functions for ‚Äúreading in‚Äù or importing data, including .csv files.</p>

<p>I use the <code class="language-plaintext highlighter-rouge">read_csv()</code> function to import data from a .csv file in the project folder called ‚Äúhotel_bookings.csv‚Äù and save it as a data frame called <code class="language-plaintext highlighter-rouge">bookings_df</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bookings_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"hotel_bookings.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="step-3-getting-to-know-your-data">Step 3: Getting to know your data</h2>

<p>Before you start cleaning the data, it is important to take some time to explore it. There are several functions to preview the data, including the <code class="language-plaintext highlighter-rouge">head()</code> function in the code chunk below:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">head</span><span class="p">(</span><span class="n">bookings_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Data can also be summarized or previewed with the <code class="language-plaintext highlighter-rouge">str()</code> and <code class="language-plaintext highlighter-rouge">glimpse()</code> functions to get a better understanding of the data by running the code chunks below:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str</span><span class="p">(</span><span class="n">bookings_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">glimpse</span><span class="p">(</span><span class="n">bookings_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Also, <code class="language-plaintext highlighter-rouge">colnames()</code> to check the names of the columns in your data set is useful:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colnames</span><span class="p">(</span><span class="n">bookings_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Some packages contain more advanced functions for summarizing and exploring your data. One example is the <code class="language-plaintext highlighter-rouge">skimr</code> package, which has a number of functions for this purpose. For example, the <code class="language-plaintext highlighter-rouge">skim_without_charts()</code> function provides a detailed summary of the data:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">skim_without_charts</span><span class="p">(</span><span class="n">bookings_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="step-4-cleaning-the-data">Step 4: Cleaning the data</h2>

<p>Based on the functions used so far it is possible to describe the data in a brief to the stakeholder. Now, let‚Äôs say we are primarily interested in the following variables: ‚Äòhotel‚Äô, ‚Äòis_canceled‚Äô, and ‚Äòlead_time‚Äô.</p>

<p>I then create a new data frame with <u>just</u> those columns, calling it <code class="language-plaintext highlighter-rouge">trimmed_df</code> by adding the variable names to this code chunk:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">trimmed_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bookings_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">select</span><span class="p">(</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Since some of the column names aren‚Äôt very intuitive, will want to rename them to make them easier to understand. So I create the same exact data frame as above, but rename the variable ‚Äòhotel‚Äô to be named ‚Äòhotel_type‚Äô to be crystal clear on what the data is about‚Ä¶</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">trimmed_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">select</span><span class="p">(</span><span class="n">hotel</span><span class="p">,</span><span class="w"> </span><span class="n">is_canceled</span><span class="p">,</span><span class="w"> </span><span class="n">lead_time</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">rename</span><span class="p">(</span><span class="s1">'hotel_type'</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">hotel</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Another common task is to either split or combine data in different columns. In this example, it is possible to combine the arrival month and year into one column using the unite() function:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">example_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bookings_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">arrival_date_year</span><span class="p">,</span><span class="w"> </span><span class="n">arrival_date_month</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">unite</span><span class="p">(</span><span class="n">arrival_month_year</span><span class="p">,</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"arrival_date_month"</span><span class="p">,</span><span class="w"> </span><span class="s2">"arrival_date_year"</span><span class="p">),</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="step-5-another-way-of-doing-things">Step 5: Another way of doing things</h2>

<p>It is possible to also use the <code class="language-plaintext highlighter-rouge">mutate()</code> function to make changes to the columns. Let‚Äôs say I wanted to create a new column that summed up all the adults, children, and babies on a reservation for the total number of people. Modify the code chunk below to create that new column:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">example_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bookings_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">guests</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">adults</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">children</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">babies</span><span class="p">)</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">example_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Great. Now it‚Äôs time to calculate some summary statistics!</p>

<p>TO calculate the total number of canceled bookings and the average lead time for booking, I first make a column called ‚Äònumber_canceled‚Äô to represent the total number of canceled bookings. Then, another column called ‚Äòaverage_lead_time‚Äô to represent the average lead time.</p>

<p>Use the <code class="language-plaintext highlighter-rouge">summarize()</code> function to do this in the code chunk below:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">example_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bookings_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">


</span><span class="n">head</span><span class="p">(</span><span class="n">example_df</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
:ET