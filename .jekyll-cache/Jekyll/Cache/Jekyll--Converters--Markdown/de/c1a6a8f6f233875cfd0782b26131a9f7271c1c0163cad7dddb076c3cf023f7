I"ƒ%<h1 id="data-scraping">Data Scraping</h1>
<p>Getting <em>laptops</em> list from flipkart.com <br /><br /></p>

<p>So the main goal of this post is to show how Iâ€™ve got a data frame with all the laptops posted on flipkart.com online store</p>

<p><strong>Importing libraries:</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="nn">requests</span> <span class="kn">import</span> <span class="n">get</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
</code></pre></div></div>

<p><strong><em>Getting the num of pages the search returns:</em></strong><br />
Here I get a site response via <em>requests.get()</em> and store it within the object <em>page</em>.<br />
Then I parse it on <em>soup</em> to use findAll and get the element where the num of pages is.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">link</span> <span class="o">=</span> <span class="s">'https://www.flipkart.com/search?q=laptop&amp;otracker=search&amp;otracker1=search&amp;marketplace=FLIPKART&amp;as-show=on&amp;as=off'</span>
<span class="n">page</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
<span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
<span class="n">element</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="n">findAll</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span> <span class="n">attrs</span> <span class="o">=</span> <span class="p">{</span><span class="s">'class'</span><span class="p">:</span> <span class="s">'_2MImiq'</span><span class="p">})[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">numOfPages</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">'(\d+)(?!.*\d+)'</span><span class="p">,</span> <span class="n">element</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">).</span><span class="n">text</span><span class="p">)</span>
<span class="n">numOfPages</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">numOfPages</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>

<p><strong>Generate list of links to scrap:</strong><br />
I create an array to store all the links to go through. First element is different so itâ€™s added before the loop.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pageLinks</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">pageLinks</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
<span class="k">for</span> <span class="n">pageNum</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">numOfPages</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="n">pageLinks</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">link</span> <span class="o">+</span> <span class="s">'&amp;page='</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">pageNum</span><span class="p">))</span>
</code></pre></div></div>

<p><strong>Initialize cleared productsâ€™ list:</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">productsList</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">productsList</span><span class="p">.</span><span class="n">clear</span><span class="p">()</span>
</code></pre></div></div>

<p><strong>Function to get data from one page:</strong><br />
This function takes the obj <em>soupPage</em> which is going to be each parsed page containing the laptops.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">getPageData</span><span class="p">(</span><span class="n">soupPage</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">soupPage</span><span class="p">.</span><span class="n">findAll</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span> <span class="n">attrs</span> <span class="o">=</span> <span class="p">{</span><span class="s">'class'</span><span class="p">:</span> <span class="s">'_3pLy-c row'</span><span class="p">}):</span>
        <span class="n">name</span> <span class="o">=</span> <span class="n">element</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span> <span class="n">attrs</span> <span class="o">=</span> <span class="p">{</span><span class="s">'class'</span><span class="p">:</span> <span class="s">'_4rR01T'</span><span class="p">})</span>
        <span class="n">price</span> <span class="o">=</span> <span class="n">element</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span> <span class="n">attrs</span> <span class="o">=</span> <span class="p">{</span><span class="s">'class'</span><span class="p">:</span> <span class="s">'_30jeq3 _1_WHN1'</span><span class="p">})</span>
        <span class="n">product</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Product'</span><span class="p">:</span> <span class="n">name</span><span class="p">.</span><span class="n">text</span><span class="p">,</span>
           <span class="s">'Price'</span><span class="p">:</span> <span class="n">price</span><span class="p">.</span><span class="n">text</span><span class="p">[</span><span class="mi">1</span><span class="p">:].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span> <span class="k">if</span> <span class="n">price</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span> <span class="k">else</span> <span class="s">'N/A'</span><span class="p">}</span>
        <span class="n">productsList</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">product</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>Extract data from pages:</strong><br />
For loop that calls each page and parses it before passing it to <em>getPageData</em> function, described above.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">link</span> <span class="ow">in</span> <span class="n">pageLinks</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
    <span class="n">page</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
    <span class="n">soupPage</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="n">text</span><span class="p">,</span> <span class="s">'html.parser'</span><span class="p">)</span>  
    <span class="n">getPageData</span><span class="p">(</span><span class="n">soupPage</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Done!"</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>Create the Data Frame:</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">productsList</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>Print the Data Set:</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">"max_rows"</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="n">style</span>
</code></pre></div></div>

<p><strong>The final result:</strong></p>

<p><img src="/img/posts/web-scraping/flipkart_laptops_df.png" /></p>
:ET