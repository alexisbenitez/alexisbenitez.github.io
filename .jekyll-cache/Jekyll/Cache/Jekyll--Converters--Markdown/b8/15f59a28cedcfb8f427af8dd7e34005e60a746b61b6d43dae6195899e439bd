I"4M<h1 id="project-euler">Project Euler</h1>

<p>Project Euler was started by Colin Hughes (a.k.a. euler) in October 2001 as a sub-section on mathschallenge.net. Who could have known how popular these types of problems would turn out to be? Since then the membership has continued to grow and Project Euler moved to its own domain in 2006.</p>

<p><em>“Project Euler exists to encourage, challenge, and develop the skills and enjoyment of anyone with an interest in the fascinating world of mathematics.”</em></p>

<p><br /><br /></p>

<h1 id="problems">Problems:</h1>
<p><br /></p>

<h2>Problem 2: Even Fibonacci numbers.</h2>
<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>

<p class="cen"> 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... </p>

<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>

<h2>Soution:</h2>

<p>First, I created a cached function in order to store all the calculated values, then I run a while loop to sum the values.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fib_cache</span> <span class="o">=</span> <span class="p">{}</span>

<span class="k">def</span> <span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">fib_cache</span><span class="p">:</span> <span class="k">return</span> <span class="n">fib_cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span>
    <span class="n">fib_cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="n">n</span> <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="k">else</span> <span class="n">fib</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">fib</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">2</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">fib_cache</span><span class="p">[</span><span class="n">n</span><span class="p">]</span>

<span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
<span class="nb">sum</span> <span class="o">=</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">res</span> <span class="o">&lt;=</span> <span class="mi">4_000_000</span><span class="p">:</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">fib</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">res</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="nb">sum</span> <span class="o">+=</span> <span class="n">res</span>
    <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>

<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span> <span class="c1"># 4613732
</span></code></pre></div></div>

<p>Another simpler approach is using python swap constructor:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res</span> <span class="o">=</span> <span class="mi">0</span> 
<span class="n">a</span> <span class="o">=</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">1</span>

<span class="k">while</span> <span class="n">b</span> <span class="o">&lt;=</span> <span class="mi">4_000_000</span><span class="p">:</span>
    <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
    <span class="k">if</span> <span class="n">b</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="n">res</span> <span class="o">+=</span> <span class="n">b</span>

<span class="k">print</span><span class="p">(</span><span class="n">res</span><span class="p">)</span> <span class="c1"># 4613732
</span></code></pre></div></div>

<!-- -------------------------------------------- -->
<p><br /></p>
<h2>Problem 4: Largest palindrome product.</h2>

<p>A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.</p>

<p>Find the largest palindrome made from the product of two 3-digit numbers.</p>

<h2>Soution:</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">maxPalindrome</span><span class="p">():</span>
    <span class="nb">max</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1000</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1000</span><span class="p">):</span>
            <span class="n">res</span> <span class="o">=</span> <span class="n">i</span> <span class="o">*</span> <span class="n">j</span>
            <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">res</span><span class="p">)</span> <span class="o">==</span> <span class="nb">str</span><span class="p">(</span><span class="n">res</span><span class="p">)[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">and</span> <span class="n">res</span> <span class="o">&gt;</span> <span class="nb">max</span><span class="p">:</span> <span class="nb">max</span> <span class="o">=</span> <span class="n">res</span>
    <span class="k">return</span> <span class="nb">max</span>

<span class="k">print</span><span class="p">(</span><span class="n">maxPalindrome</span><span class="p">())</span>
</code></pre></div></div>

<!-- -------------------------------------------- -->
<p><br /></p>
<h2>Problem 5: Smallest multiple.</h2>
<p>2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.</p>

<p>What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?</p>

<h2>Soution:</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">divisible</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
    <span class="n">divisible</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="n">n</span> <span class="o">=</span> <span class="n">num</span>
    <span class="k">while</span> <span class="n">divisible</span> <span class="o">==</span> <span class="bp">False</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">divisor</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="n">divisor</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">n</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="k">break</span>
            <span class="k">if</span> <span class="n">divisor</span> <span class="o">==</span> <span class="n">num</span><span class="p">:</span>
                <span class="n">divisible</span> <span class="o">=</span> <span class="bp">True</span>
                <span class="k">return</span> <span class="n">n</span>

<span class="k">print</span><span class="p">(</span><span class="n">divisible</span><span class="p">(</span><span class="mi">20</span><span class="p">))</span> <span class="c1">#232792560
</span></code></pre></div></div>

<!-- -------------------------------------------- -->
<p><br /></p>
<h2>Problem 9: Special Pythagorean triplet.</h2>

<p>A Pythagorean triplet is a set of three natural numbers, a &lt; b &lt; c, for which:</p>

<p class="cen"> a^2 + b^2 = c^2 </p>

<p>For example, 32 + 42 = 9 + 16 = 25 = 52.</p>

<p>There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc.</p>

<h2>Soution:</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">triplet</span><span class="p">(</span><span class="n">limit</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">limit</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">limit</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">a</span><span class="p">):</span>
            <span class="n">c</span> <span class="o">=</span> <span class="mi">1000</span> <span class="o">-</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span>
            <span class="k">if</span> <span class="n">a</span><span class="o">*</span><span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="o">*</span><span class="n">b</span> <span class="o">==</span> <span class="n">c</span><span class="o">*</span><span class="n">c</span><span class="p">:</span>
                <span class="k">return</span> <span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">*</span><span class="n">c</span>
    
<span class="k">print</span><span class="p">(</span><span class="n">triplet</span><span class="p">(</span><span class="mi">1000</span><span class="p">))</span> <span class="c1">#31875000
</span></code></pre></div></div>

<!-- -------------------------------------------- -->
<p><br /></p>
<h2>Problem 8: Largest product in a series.</h2>

<p>The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.</p>

<p class="cen" style="font-family: consolas">
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
</p>

<p>Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?</p>

<h2>Soution:</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="nb">reduce</span>

<span class="c1"># used regex on sublime to set string in one line
</span><span class="n">num</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="mi">7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450</span><span class="p">)</span>

<span class="n">chunk</span> <span class="o">=</span> <span class="mi">13</span>

<span class="c1"># create a list of all possible 13 digits long chunks
</span><span class="n">nums</span> <span class="o">=</span> <span class="p">[</span><span class="n">num</span><span class="p">[</span><span class="n">i</span><span class="p">:</span> <span class="n">i</span> <span class="o">+</span> <span class="n">chunk</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="o">-</span> <span class="n">chunk</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)]</span>

<span class="c1"># create a list "factor", with lists containing one element per digit
</span><span class="n">factors</span> <span class="o">=</span> <span class="p">[[</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">num</span><span class="p">]</span> <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">]</span>

<span class="c1"># apply the product of each factor within the lists, separately
</span><span class="n">products</span> <span class="o">=</span> <span class="p">[</span><span class="nb">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">x</span><span class="o">*</span><span class="n">y</span><span class="p">,</span> <span class="n">factor</span><span class="p">)</span> <span class="k">for</span> <span class="n">factor</span> <span class="ow">in</span> <span class="n">factors</span><span class="p">]</span>

<span class="c1"># max product found
</span><span class="k">print</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">products</span><span class="p">))</span> <span class="c1"># 23514624000
</span></code></pre></div></div>

<!-- -------------------------------------------- -->
<p><br /></p>
<h2>Problem 10: Summation of primes.</h2>

<p>The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.</p>

<p>Find the sum of all the primes below two million.</p>

<h2>Soution:</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">math</span> <span class="k">as</span> <span class="n">mth</span>

<span class="k">def</span> <span class="nf">isPrime</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span> <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span> <span class="k">return</span> <span class="bp">True</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">num</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">:</span> <span class="k">return</span> <span class="bp">False</span>
    <span class="n">limit</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">mth</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">num</span><span class="p">))</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="k">for</span> <span class="n">div</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">limit</span><span class="p">,</span> <span class="mi">2</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">num</span> <span class="o">%</span> <span class="n">div</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="k">return</span> <span class="bp">False</span>
    <span class="k">return</span> <span class="bp">True</span>

<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2_000_000</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">isPrime</span><span class="p">(</span><span class="n">num</span><span class="p">):</span> <span class="nb">sum</span> <span class="o">+=</span> <span class="n">num</span>

<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span> <span class="c1"># 142913828922
</span></code></pre></div></div>

<!-- -------------------------------------------- 
<br>
<h2>Problem X:</h2>

<p class="cen"> This is centered </p>

<h2>Soution:</h2>

```python

```

<!-- -------------------------------------------- 
<br>
<h2>Problem X:</h2>

<p class="cen"> This is centered </p>

<h2>Soution:</h2>

```python

```

<!-- -------------------------------------------- 
<br>
<h2>Problem X:</h2>

<p class="cen"> This is centered </p>

<h2>Soution:</h2>

```python

```

<!-- -------------------------------------------- 
<br>
<h2>Problem X:</h2>

<p class="cen"> This is centered </p>

<h2>Soution:</h2>

```python

```

<!-- -------------------------------------------- -->
:ET